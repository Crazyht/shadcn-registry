import { DocSample, InstallationCommand } from '../../../src/components/registry'
import { DocSectionHeader, DocSubSectionHeader } from '../../../src/components/doc-navigation-zustand'
import {
  MediaQueryResponsiveExample,
  MediaQueryThemeExample,
  MediaQueryCustomExample,
  MediaQueryNavigationExample
} from './samples'

/**
 * Documentation pour useMediaQuery
 * Fichier interne - Non inclus dans la registry
 */
export function UseMediaQueryDocumentation() {
  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="space-y-4">
        <div className="flex items-center gap-3">
          <h1 className="text-4xl font-bold">useMediaQuery</h1>
          <span className="inline-flex items-center rounded-full bg-green-50 dark:bg-green-950/50 px-3 py-1 text-sm font-medium text-green-700 dark:text-green-300">
            React Hook
          </span>
        </div>
        <p className="text-xl text-muted-foreground max-w-3xl leading-relaxed">
          Un hook React pour √©valuer les media queries CSS en temps r√©el. Id√©al pour cr√©er des
          interfaces responsives, d√©tecter les pr√©f√©rences utilisateur, et adapter l'exp√©rience
          selon le type d'appareil et les capacit√©s du navigateur.
        </p>
      </div>

      {/* Features */}
      <DocSectionHeader id="features" title="Fonctionnalit√©s">
        ‚ú® Fonctionnalit√©s
      </DocSectionHeader>
      <div className="space-y-4">
        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
          <div className="space-y-3 p-4 border rounded-lg">
            <div className="text-2xl">üì±</div>
            <div>
              <h3 className="font-medium">Design Responsif</h3>
              <p className="text-sm text-muted-foreground">Adaptation automatique aux breakpoints</p>
            </div>
          </div>
          <div className="space-y-3 p-4 border rounded-lg">
            <div className="text-2xl">üîÑ</div>
            <div>
              <h3 className="font-medium">Temps R√©el</h3>
              <p className="text-sm text-muted-foreground">Mise √† jour instantan√©e lors des changements</p>
            </div>
          </div>
          <div className="space-y-3 p-4 border rounded-lg">
            <div className="text-2xl">üé®</div>
            <div>
              <h3 className="font-medium">Pr√©f√©rences Syst√®me</h3>
              <p className="text-sm text-muted-foreground">D√©tection du th√®me et accessibilit√©</p>
            </div>
          </div>
          <div className="space-y-3 p-4 border rounded-lg">
            <div className="text-2xl">üåê</div>
            <div>
              <h3 className="font-medium">Compatible SSR</h3>
              <p className="text-sm text-muted-foreground">Fonctionne c√¥t√© serveur</p>
            </div>
          </div>
        </div>
      </div>

      {/* Installation */}
      <DocSectionHeader id="installation" title="Installation">
        üì¶ Installation
      </DocSectionHeader>
      <div className="space-y-4">
        <InstallationCommand componentPath="hooks/use-media-query" />
        <p className="text-sm text-muted-foreground">
          Aucune d√©pendance externe requise, utilise l'API native `matchMedia`.
        </p>
      </div>

      {/* API Reference */}
      <DocSectionHeader id="api-reference" title="R√©f√©rence API">
        üìö R√©f√©rence API
      </DocSectionHeader>
      <div className="space-y-4">
        <div className="space-y-6">
          <div>
            <DocSubSectionHeader id="use-media-query-hook" title="useMediaQuery" />
            <div className="rounded-lg border overflow-hidden">
              <table className="w-full">
                <thead className="bg-muted/50">
                  <tr className="border-b">
                    <th className="text-left p-4 font-medium">Param√®tre</th>
                    <th className="text-left p-4 font-medium">Type</th>
                    <th className="text-left p-4 font-medium">Description</th>
                  </tr>
                </thead>
                <tbody className="text-sm">
                  <tr className="border-b">
                    <td className="p-4 font-mono">query</td>
                    <td className="p-4"><code>string</code></td>
                    <td className="p-4">Media query CSS √† √©valuer (ex: "(max-width: 768px)")</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>

          <div>
            <DocSubSectionHeader id="return-value" title="Valeur de retour" />
            <div className="rounded-lg border overflow-hidden">
              <table className="w-full">
                <thead className="bg-muted/50">
                  <tr className="border-b">
                    <th className="text-left p-4 font-medium">Type</th>
                    <th className="text-left p-4 font-medium">Description</th>
                  </tr>
                </thead>
                <tbody className="text-sm">
                  <tr>
                    <td className="p-4"><code>boolean</code></td>
                    <td className="p-4">true si la media query correspond, false sinon</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>

          <div>
            <DocSubSectionHeader id="common-media-queries" title="Media Queries courantes" />
            <div className="grid gap-3 md:grid-cols-2">
              <div className="p-4 border rounded-lg">
                <h4 className="font-medium text-blue-600 mb-2">üìè Breakpoints</h4>
                <div className="space-y-1 text-sm font-mono">
                  <div>(max-width: 640px) - Mobile</div>
                  <div>(max-width: 768px) - Tablet</div>
                  <div>(min-width: 1024px) - Desktop</div>
                </div>
              </div>
              <div className="p-4 border rounded-lg">
                <h4 className="font-medium text-purple-600 mb-2">üé® Pr√©f√©rences</h4>
                <div className="space-y-1 text-sm font-mono">
                  <div>(prefers-color-scheme: dark)</div>
                  <div>(prefers-reduced-motion: reduce)</div>
                  <div>(prefers-contrast: high)</div>
                </div>
              </div>
              <div className="p-4 border rounded-lg">
                <h4 className="font-medium text-orange-600 mb-2">üì± Orientation</h4>
                <div className="space-y-1 text-sm font-mono">
                  <div>(orientation: landscape)</div>
                  <div>(orientation: portrait)</div>
                </div>
              </div>
              <div className="p-4 border rounded-lg">
                <h4 className="font-medium text-green-600 mb-2">üñ±Ô∏è Interaction</h4>
                <div className="space-y-1 text-sm font-mono">
                  <div>(hover: hover) - Souris</div>
                  <div>(pointer: fine) - Pr√©cision</div>
                  <div>(hover: none) - Tactile</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Examples */}
      <DocSectionHeader id="examples" title="Exemples">
        üéØ Exemples
      </DocSectionHeader>
      <div className="space-y-8">

        <DocSample
          id="responsive-example"
          title="Design responsif"
          description={
            <div>
              <p className="mb-3">Adaptation automatique selon la taille d'√©cran avec breakpoints courants.</p>
              <div>
                <p><strong>üìè Breakpoints test√©s :</strong></p>
                <ul className="list-disc list-inside space-y-1">
                  <li><strong>Mobile :</strong> ‚â§ 768px - Affichage en 1 colonne</li>
                  <li><strong>Tablette :</strong> 769px - 1024px - Affichage en 2 colonnes</li>
                  <li><strong>Desktop :</strong> ‚â• 1025px - Affichage en 3 colonnes</li>
                </ul>
              </div>
            </div>
          }
          sourceCode={`import { useMediaQuery } from './use-media-query'

export function ResponsiveExample() {
  const isMobile = useMediaQuery('(max-width: 768px)')
  const isTablet = useMediaQuery('(min-width: 769px) and (max-width: 1024px)')

  return (
    <div className="space-y-4">
      <div className="text-center p-6 border rounded-lg">
        <div className="text-4xl mb-2">
          {isMobile ? 'üì±' : isTablet ? 'üìã' : 'üñ•Ô∏è'}
        </div>
        <h3 className="text-xl font-bold">
          {isMobile ? 'Mobile' : isTablet ? 'Tablette' : 'Desktop'}
        </h3>
      </div>
    </div>
  )
}`}
        >
          <MediaQueryResponsiveExample />
        </DocSample>

        <DocSample
          id="system-preferences"
          title="Pr√©f√©rences syst√®me"
          description={
            <div>
              <p className="mb-3">D√©tection automatique des pr√©f√©rences utilisateur configur√©es dans le syst√®me d'exploitation.</p>
              <div>
                <p><strong>üé® Pr√©f√©rences d√©tect√©es :</strong></p>
                <ul className="list-disc list-inside space-y-1">
                  <li><strong>Th√®me :</strong> Sombre/Clair selon les param√®tres OS</li>
                  <li><strong>Animation :</strong> D√©tection du mode "mouvement r√©duit"</li>
                  <li><strong>Contraste :</strong> Support du contraste √©lev√©</li>
                </ul>
              </div>
            </div>
          }
          sourceCode={`import { useMediaQuery } from './use-media-query'

export function SystemPreferencesExample() {
  const prefersDark = useMediaQuery('(prefers-color-scheme: dark)')
  const prefersReducedMotion = useMediaQuery('(prefers-reduced-motion: reduce)')

  return (
    <div className="space-y-4">
      <div className="p-4 border rounded-lg">
        <h3>Pr√©f√©rences d√©tect√©es</h3>
        <p>Th√®me: {prefersDark ? 'Sombre üåô' : 'Clair ‚òÄÔ∏è'}</p>
        <p>Mouvement r√©duit: {prefersReducedMotion ? 'Oui' : 'Non'}</p>
      </div>
    </div>
  )
}`}
        >
          <MediaQueryThemeExample />
        </DocSample>

        <DocSample
          id="custom-query-tester"
          title="Testeur de media queries"
          description={
            <div>
              <p className="mb-3">Interface interactive pour tester des media queries personnalis√©es en temps r√©el.</p>
              <div>
                <p><strong>üîß Fonctionnalit√©s :</strong></p>
                <ul className="list-disc list-inside space-y-1">
                  <li><strong>Test en temps r√©el :</strong> Saisissez une query et voyez le r√©sultat</li>
                  <li><strong>Requ√™tes pr√©d√©finies :</strong> Boutons rapides pour les queries courantes</li>
                  <li><strong>Infos appareil :</strong> Dimensions et capacit√©s d√©tect√©es</li>
                </ul>
              </div>
            </div>
          }
          sourceCode={`import { useState } from 'react'
import { useMediaQuery } from './use-media-query'

export function MediaQueryTester() {
  const [customQuery, setCustomQuery] = useState('(min-width: 600px)')
  const customResult = useMediaQuery(customQuery)

  return (
    <div className="space-y-4">
      <div className="flex gap-2">
        <input
          type="text"
          value={customQuery}
          onChange={(e) => setCustomQuery(e.target.value)}
          className="flex-1 px-3 py-2 border rounded-md font-mono"
        />
        <div className={\`px-3 py-2 rounded-md \${
          customResult ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
        }\`}>
          {customResult ? '‚úì Correspond' : '‚úó Ne correspond pas'}
        </div>
      </div>
    </div>
  )
}`}
          >
            <MediaQueryCustomExample />
          </DocSample>

          <DocSample
            id="adaptive-navigation"
            title="Navigation adaptative"
            description={
              <div>
                <p className="mb-3">Interface compl√®te qui s'adapte automatiquement selon l'appareil utilis√©.</p>
                <div>
                  <p><strong>üß≠ Comportements adaptatifs :</strong></p>
                  <ul className="list-disc list-inside space-y-1">
                    <li><strong>Mobile :</strong> Menu burger avec navigation simplifi√©e</li>
                    <li><strong>Desktop :</strong> Barre de navigation horizontale compl√®te</li>
                    <li><strong>Transitions :</strong> Respect des pr√©f√©rences d'animation</li>
                  </ul>
                </div>
              </div>
            }
            sourceCode={`import { useMediaQuery } from './use-media-query'

export function AdaptiveNavigation() {
  const isMobile = useMediaQuery('(max-width: 768px)')

  if (isMobile) {
    return (
      <div className="p-3 bg-gray-100 rounded-lg">
        <div className="flex justify-between items-center">
          <span className="font-medium">Mon App</span>
          <button className="p-2">‚ò∞</button>
        </div>
        <p className="text-sm text-orange-600 mt-2">üì± Mode mobile</p>
      </div>
    )
  }

  return (
    <nav className="flex justify-between items-center p-3 bg-gray-100 rounded-lg">
      <span className="font-medium">Mon App</span>
      <div className="flex gap-4">
        <button>üè† Accueil</button>
        <button>üì¶ Produits</button>
      </div>
      <p className="text-sm text-blue-600">üñ•Ô∏è Mode desktop</p>
    </nav>
  )
}`}
          >
            <MediaQueryNavigationExample />
          </DocSample>
      </div>
    </div>
  )
}

// Default export for dynamic loading
export default UseMediaQueryDocumentation
