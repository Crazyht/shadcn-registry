{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-debounce",
  "type": "registry:hook",
  "description": "Hook pour debounce des valeurs",
  "dependencies": [],
  "files": [
    {
      "path": "registry/new-york/hooks/use-debounce.ts",
      "content": "// registry/new-york/hooks/use-debounce.ts\nimport { useState, useEffect } from 'react'\n\n/**\n * Hook pour retarder la mise à jour d'une valeur\n * @param value - Valeur à debouncer\n * @param delay - Délai en millisecondes\n * @returns Valeur debouncée\n * @example\n * ```tsx\n * const [searchTerm, setSearchTerm] = useState('')\n * const debouncedSearchTerm = useDebounce(searchTerm, 500)\n *\n * useEffect(() => {\n *   // Effectuer la recherche avec debouncedSearchTerm\n * }, [debouncedSearchTerm])\n * ```\n */\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n",
      "type": "registry:hook"
    }
  ]
}